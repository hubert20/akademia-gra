// src/js/views/view6.js

import characterNeutral from '../../assets/task6/character-neutral.png';
import characterHappy from '../../assets/task6/character-happy.png';
import characterNeutralBubble from '../../assets/task6/character-neutral-bubble.png'; // opcjonalnie inna grafika z dymkiem

export const view = `
  <div class="assertiveness-quiz container mt-4">
    <div class="info-box bg-light p-3 mb-4 rounded">
      <strong>Ciekawostka</strong><br />
      AsertywnoÅ›Ä‡ to umiejÄ™tnoÅ›Ä‡ mÃ³wienia tego, co naprawdÄ™ myÅ›limy i czujemy - z szacunkiem do siebie i innych. Nie chodzi o bycie miÅ‚ym za wszelkÄ… cenÄ™ â€“ ale o to, by stawiaÄ‡ granice i dbaÄ‡ o siebie.
    </div>

    <div class="question-section mb-3">
      <h4>ğŸ“˜ KtÃ³re zdania sÄ… asertywne?</h4>
    </div>

    <div class="answers mb-4 d-flex flex-column gap-2">
      <button class="btn btn-outline-primary answer" data-correct="true">Nie muszÄ™ mieÄ‡ ochoty robiÄ‡ tego co robiÄ… inni.</button>
      <button class="btn btn-outline-primary answer" data-correct="false" data-feedback="JeÅ›li TwÃ³j najlepszy przyjaciel jest Twoim prawdziwym przyjacielem...">Zawsze muszÄ™ zgodziÄ‡ siÄ™ z tym co sÄ…dzi mÃ³j najlepszy przyjaciel.</button>
      <button class="btn btn-outline-primary answer" data-correct="true">MogÄ™ nie zgodziÄ‡ siÄ™ z opiniÄ… moich bliskich.</button>
      <button class="btn btn-outline-primary answer" data-correct="false" data-feedback="Twoje zdanie jest zawsze rÃ³wnie waÅ¼ne co zdanie innych!">Moje zdanie jest mniej waÅ¼ne od zdania innych.</button>
      <button class="btn btn-outline-primary answer" data-correct="true">Zawsze mogÄ™ powiedzieÄ‡ nie.</button>
      <button class="btn btn-outline-primary answer" data-correct="false" data-feedback="Osoby wokÃ³Å‚ Ciebie powinny lubiÄ‡ i akceptowaÄ‡ CiÄ™...">Warto ulegaÄ‡ innym, po to Å¼eby mnie lubili.</button>
    </div>

    <div class="character-box d-flex align-items-center gap-3 mb-4">
      <img src="${characterNeutral}" id="character-image" alt="PostaÄ‡" class="character-img" width="150" />
      <p id="feedback-text" class="text-danger fw-bold m-0"></p>
    </div>

    <button id="next-button" class="btn btn-success" style="display: none;">DALEJ</button>
  </div>
`;

export const logicFunc = (onSuccess) => {
  const answers = document.querySelectorAll('.answer');
  const feedback = document.getElementById('feedback-text');
  const nextBtn = document.getElementById('next-button');
  const characterImage = document.getElementById('character-image');

  let selected = new Set();

  const correctAnswers = [...answers].filter(btn => btn.dataset.correct === 'true').map(btn => btn.textContent);

  answers.forEach(btn => {
    btn.addEventListener('click', () => {
      const text = btn.textContent;
      const isCorrect = btn.dataset.correct === 'true';

      if (selected.has(text)) return;

      selected.add(text);

      btn.classList.remove('btn-outline-primary');
      btn.classList.add(isCorrect ? 'btn-success' : 'btn-danger');

      if (!isCorrect) {
        const reason = btn.dataset.feedback || 'SprÃ³buj jeszcze raz!';
        feedback.textContent = reason;
        characterImage.src = characterNeutralBubble; // lub characterNeutral jeÅ›li nie masz z dymkiem
      } else {
        feedback.textContent = '';
      }

      // sprawdÅº, czy zaznaczone sÄ… wszystkie poprawne i Å¼adna zÅ‚a
      const selectedTexts = [...selected];
      const hasWrong = selectedTexts.some(text =>
        !correctAnswers.includes(text)
      );
      const allCorrect = correctAnswers.every(c => selected.has(c));

      if (!hasWrong && allCorrect) {
        feedback.textContent = 'Brawo! To sÄ… asertywne zdania.';
        characterImage.src = characterHappy;
        nextBtn.style.display = 'inline-block';
      }
    });
  });

  nextBtn.addEventListener('click', () => {
    onSuccess();
  });
};
